You are provided with the individual weight of the 26 alphabetic characters. You are expected to find the weight of a given string as follows:
Weight of the string=Product of weights of words in the string
Weight of the word=Sum of weights of the alphabets in the word
Note: While finding weight of a word, special consideration has to be given to the first and last characters of the word. If the first character or the last character of the word has a negative weight, we need to add the 'alphabetic position' of that character to the weight of the character. The 'alphabetic position' of a=A=1, 'alphabetic position' of b=B=2 and so on till x=X=26.
Example1:
Array input1[] specifying the individual weights of the 26 alphabetic characters={15,16,1,-2,-13,61,11,4,3,19,-4,17,-3,90,-65,67,12,0,13,2,3,43,21,-17,2,42}
String whose weight is to be found="Wipro Limited"
weight of the string will be=(Weight of "Wipro") x (weight of "Limited").
weight of "Wipro"=21+3+67+0+(-65)=21+3+67+0+(-65+15)=41
Note: Note here that the weight of the last character 'o' of the word "Wipro" is -65 which is negative, so we have to add the alphabetic position of 'o'(whcih is 15).
weight of "Limited"=17+3+(-3)+3+2+(-13)+(-2)=17+3+(-3)+3+2+(-13)+(-2+4)=11
Note: Note here that the weight of the last character 'd' of the word "Limited" is -2 which is negative, so we have to add the alphabetic position of 'd'(whcih is 4).
Therefore, Weight of the string will be=41x11=451(Output).
Notes:
1. Input1[] is an array of 26 integers representing the individual weights of the 26 alphabetic character for A to Z.
2. Input2 is the string(of one or more words) whose weight has to be found.
3. You can assume that the string will contain only alphabetic characters and every word will be separated by one one space character.
4. The weights and alphabetic positions of the alphabets are not case-sensitive, i.e. these are the same for both upper and lower case letters
Example2:
Input:
12 11 6 1 -1 23 12 1 28 -43 6 98 11 2 7 88 9 -4 -54 25 19 -12 -32 65 3 -9
Spring AND Hibernate
Output:
106470

-----------------------------------------------------------------------------------------------------------------------------

public class Main
{
	public static void main(String[] args) {
		//System.out.println("Hello World");
    int inarr[]={15 ,16, 1, -2, -13, 61, 11, 4, 3, 19, -4, 17, -3, 90, -65, 67, 12, 0 ,13 ,2 ,3 ,43, 21, -17, 2, 42};
    char alpha[]={'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
    
    String stt="Wipro Limited";
    String str=stt.toLowerCase();
    System.out.println(str);
    String st[]=str.split(" ");
    //int sum=0;
    int mult=1;
    for(int i=0;i<st.length;i++)
    {
        int sum=0;
        String ss=st[i];
        for(int j=0;j<=ss.length()-1;j++)
        {
            for(int k=0;k<alpha.length;k++)
            {
                Character c=ss.charAt(j);
                if(c==alpha[k])
                {
                    if(j==0 && inarr[k]<0)
                    {
                    sum+=inarr[k]+k+1;
                    }
                    else if(j==ss.length()-1 && inarr[k]<0)
                    {
                    sum+=inarr[k]+k+1;
                    }
                    else{  //System.out.println(inarr[k]);
                   sum+=inarr[k]; 
                   //System.out.println(inarr[k]);
                        }
                }
            }
        }
        //int mult=1;
        mult=mult*sum;
        //System.out.println(mult);
    }
    System.out.println(mult);
	}
}
